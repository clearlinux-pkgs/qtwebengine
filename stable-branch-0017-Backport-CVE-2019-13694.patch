From cda3a507f68d214d81820501dfff0a999bb3ede8 Mon Sep 17 00:00:00 2001
From: Allan Sandfeld Jensen <allan.jensen@qt.io>
Date: Mon, 14 Oct 2019 13:32:20 +0200
Subject: [PATCH] [Backport] CVE-2019-13694
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fix heap-use-after-free in setLocalDescription/setRemoteDescription.

This is another case where the pc handler invokes JavaScript callbacks
which could cause the PC+handler to be deleted. The fix is to invoke the
callback as the last step before returning.

(cherry picked from commit 0cd560eea3e00305765c2a9da7ec959ccb757460)

Bug: 1005251
Change-Id: I9a06ed0a6885b2f6d46e6646c2df0a9d07e79a2d
Reviewed-by: Guido Urdaneta <guidou@chromium.org>
Commit-Queue: Henrik Bostr√∂m <hbos@chromium.org>
Cr-Original-Commit-Position: refs/heads/master@{#701778}
Cr-Commit-Position: refs/branch-heads/3865@{#869}
Cr-Branched-From: 0cdcc6158160790658d1f033d3db873603250124-refs/heads/master@{#681094}
Reviewed-by: Kirill Burtsev <kirill.burtsev@qt.io>
---
 .../media/webrtc/rtc_peer_connection_handler.cc  | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/src/3rdparty/chromium/content/renderer/media/webrtc/rtc_peer_connection_handler.cc b/src/3rdparty/chromium/content/renderer/media/webrtc/rtc_peer_connection_handler.cc
index 0d815b449ee..8a9329b9a81 100644
--- a/src/3rdparty/chromium/content/renderer/media/webrtc/rtc_peer_connection_handler.cc
+++ b/src/3rdparty/chromium/content/renderer/media/webrtc/rtc_peer_connection_handler.cc
@@ -1268,13 +1268,17 @@ void RTCPeerConnectionHandler::SetLocalDescription(
     reason_str.append(" ");
     reason_str.append(error.description);
     LOG(ERROR) << reason_str;
-    request.RequestFailed(webrtc::RTCError(webrtc::RTCErrorType::INTERNAL_ERROR,
-                                           std::move(reason_str)));
     if (peer_connection_tracker_) {
       peer_connection_tracker_->TrackSessionDescriptionCallback(
           this, PeerConnectionTracker::ACTION_SET_LOCAL_DESCRIPTION,
           "OnFailure", reason_str);
     }
+    // Warning: this line triggers the error callback to be executed, causing
+    // arbitrary JavaScript to be executed synchronously. As a result, it is
+    // possible for |this| to be deleted after this line. See
+    // https://crbug.com/1005251.
+    request.RequestFailed(webrtc::RTCError(webrtc::RTCErrorType::INTERNAL_ERROR,
+                                           std::move(reason_str)));
     return;
   }
 
@@ -1336,13 +1340,17 @@ void RTCPeerConnectionHandler::SetRemoteDescription(
     reason_str.append(" ");
     reason_str.append(error.description);
     LOG(ERROR) << reason_str;
-    request.RequestFailed(webrtc::RTCError(
-        webrtc::RTCErrorType::UNSUPPORTED_OPERATION, std::move(reason_str)));
     if (peer_connection_tracker_) {
       peer_connection_tracker_->TrackSessionDescriptionCallback(
           this, PeerConnectionTracker::ACTION_SET_REMOTE_DESCRIPTION,
           "OnFailure", reason_str);
     }
+    // Warning: this line triggers the error callback to be executed, causing
+    // arbitrary JavaScript to be executed synchronously. As a result, it is
+    // possible for |this| to be deleted after this line. See
+    // https://crbug.com/1005251.
+    request.RequestFailed(webrtc::RTCError(
+        webrtc::RTCErrorType::UNSUPPORTED_OPERATION, std::move(reason_str)));
     return;
   }
 
-- 
2.24.0

