From cdee285b9b2d6c7d36742987613c6ea7525b8873 Mon Sep 17 00:00:00 2001
From: Allan Sandfeld Jensen <allan.jensen@qt.io>
Date: Mon, 14 Oct 2019 11:58:26 +0200
Subject: [PATCH] [Backport] CVE-2019-5875
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Pass renderer initiated flag for navigations triggered by cross-origin download

If a navigation is triggered by a cross-origin download initiated by
renderer, the navigation should carry the renderer initiated flag.

BUG=979443

(cherry picked from commit 6d7c9ec2923a71d3f9acb7fdd019a5e56f44c09b)

Change-Id: I0716193768a5473f70e909b7efbb5fc74933d89e
Reviewed-by: Xing Liu <xingliu@chromium.org>
Commit-Queue: Min Qin <qinmin@chromium.org>
Cr-Original-Commit-Position: refs/heads/master@{#690869}
Reviewed-by: Min Qin <qinmin@chromium.org>
Cr-Commit-Position: refs/branch-heads/3865@{#714}
Cr-Branched-From: 0cdcc6158160790658d1f033d3db873603250124-refs/heads/master@{#681094}
Reviewed-by: JÃ¼ri Valdmann <juri.valdmann@qt.io>
---
 .../internal/common/download_create_info.cc   |  3 +-
 .../internal/common/resource_downloader.cc    |  3 +
 .../internal/common/resource_downloader.h     |  3 +
 .../public/common/download_create_info.h      |  3 +
 .../browser/download/download_browsertest.cc  | 78 +++++++++++++++++++
 .../browser/download/download_manager_impl.cc |  1 +
 6 files changed, 90 insertions(+), 1 deletion(-)

diff --git a/src/3rdparty/chromium/components/download/internal/common/download_create_info.cc b/src/3rdparty/chromium/components/download/internal/common/download_create_info.cc
index ebc8df19a11..1cd8bd169b0 100644
--- a/src/3rdparty/chromium/components/download/internal/common/download_create_info.cc
+++ b/src/3rdparty/chromium/components/download/internal/common/download_create_info.cc
@@ -31,7 +31,8 @@ DownloadCreateInfo::DownloadCreateInfo(
       accept_range(false),
       connection_info(net::HttpResponseInfo::CONNECTION_INFO_UNKNOWN),
       method("GET"),
-      ukm_source_id(ukm::kInvalidSourceId) {}
+      ukm_source_id(ukm::kInvalidSourceId),
+      is_content_initiated(false) {}
 
 DownloadCreateInfo::DownloadCreateInfo()
     : DownloadCreateInfo(base::Time(), base::WrapUnique(new DownloadSaveInfo)) {
diff --git a/src/3rdparty/chromium/components/download/internal/common/resource_downloader.cc b/src/3rdparty/chromium/components/download/internal/common/resource_downloader.cc
index 5d958e95049..31fa993e1fc 100644
--- a/src/3rdparty/chromium/components/download/internal/common/resource_downloader.cc
+++ b/src/3rdparty/chromium/components/download/internal/common/resource_downloader.cc
@@ -125,6 +125,7 @@ ResourceDownloader::ResourceDownloader(
       tab_referrer_url_(tab_referrer_url),
       delegate_task_runner_(task_runner),
       url_loader_factory_getter_(std::move(url_loader_factory_getter)),
+      is_content_initiated_(false),
       weak_ptr_factory_(this) {}
 
 ResourceDownloader::~ResourceDownloader() = default;
@@ -134,6 +135,7 @@ void ResourceDownloader::Start(
     bool is_parallel_request) {
   callback_ = download_url_parameters->callback();
   guid_ = download_url_parameters->guid();
+  is_content_initiated_ = download_url_parameters->content_initiated();
 
   // Set up the URLLoaderClient.
   url_loader_client_ = std::make_unique<DownloadResponseHandler>(
@@ -208,6 +210,7 @@ void ResourceDownloader::OnResponseStarted(
   download_create_info->tab_referrer_url = tab_referrer_url_;
   download_create_info->render_process_id = render_process_id_;
   download_create_info->render_frame_id = render_frame_id_;
+  download_create_info->is_content_initiated = is_content_initiated_;
 
   delegate_task_runner_->PostTask(
       FROM_HERE,
diff --git a/src/3rdparty/chromium/components/download/internal/common/resource_downloader.h b/src/3rdparty/chromium/components/download/internal/common/resource_downloader.h
index a3557f86d0a..9d746b92f5b 100644
--- a/src/3rdparty/chromium/components/download/internal/common/resource_downloader.h
+++ b/src/3rdparty/chromium/components/download/internal/common/resource_downloader.h
@@ -141,6 +141,9 @@ class COMPONENTS_DOWNLOAD_EXPORT ResourceDownloader
   scoped_refptr<download::DownloadURLLoaderFactoryGetter>
       url_loader_factory_getter_;
 
+  // Whether download is initated by the content on the page.
+  bool is_content_initiated_;
+
   base::WeakPtrFactory<ResourceDownloader> weak_ptr_factory_;
 
   DISALLOW_COPY_AND_ASSIGN(ResourceDownloader);
diff --git a/src/3rdparty/chromium/components/download/public/common/download_create_info.h b/src/3rdparty/chromium/components/download/public/common/download_create_info.h
index 7c82695416b..ec793ca4218 100644
--- a/src/3rdparty/chromium/components/download/public/common/download_create_info.h
+++ b/src/3rdparty/chromium/components/download/public/common/download_create_info.h
@@ -166,6 +166,9 @@ struct COMPONENTS_DOWNLOAD_EXPORT DownloadCreateInfo {
   // Source of the download, used in metrics.
   DownloadSource download_source = DownloadSource::UNKNOWN;
 
+  // Whether download is initated by the content on the page.
+  bool is_content_initiated;
+
  private:
   DISALLOW_COPY_AND_ASSIGN(DownloadCreateInfo);
 };
diff --git a/src/3rdparty/chromium/content/browser/download/download_browsertest.cc b/src/3rdparty/chromium/content/browser/download/download_browsertest.cc
index 58882960352..dc37bf306e8 100644
--- a/src/3rdparty/chromium/content/browser/download/download_browsertest.cc
+++ b/src/3rdparty/chromium/content/browser/download/download_browsertest.cc
@@ -618,6 +618,38 @@ class ErrorStreamCountingObserver : download::DownloadItem::Observer {
   base::Closure completion_closure_;
 };
 
+// Class to wait for a WebContents to kick off a specified number of
+// navigations.
+class NavigationStartObserver : public WebContentsObserver {
+ public:
+  explicit NavigationStartObserver(WebContents* web_contents)
+      : WebContentsObserver(web_contents) {}
+  ~NavigationStartObserver() override {}
+
+  void WaitForFinished(int navigation_count) {
+    if (start_count_ >= navigation_count)
+      return;
+    navigation_count_ = navigation_count;
+    base::RunLoop run_loop;
+    completion_closure_ = run_loop.QuitClosure();
+    run_loop.Run();
+  }
+
+ private:
+  // WebContentsObserver implementations.
+  void DidStartNavigation(NavigationHandle* navigation_handle) override {
+    start_count_++;
+    if (start_count_ >= navigation_count_ && !completion_closure_.is_null()) {
+      std::move(completion_closure_).Run();
+    }
+  }
+
+  int navigation_count_ = 0;
+  int start_count_ = 0;
+  base::Closure completion_closure_;
+  DISALLOW_COPY_AND_ASSIGN(NavigationStartObserver);
+};
+
 bool IsDownloadInState(download::DownloadItem::DownloadState state,
                        download::DownloadItem* item) {
   return item->GetState() == state;
@@ -2990,8 +3022,54 @@ IN_PROC_BROWSER_TEST_F(DownloadContentTest,
   std::vector<download::DownloadItem*> downloads;
   DownloadManagerForShell(shell())->GetAllDownloads(&downloads);
   ASSERT_EQ(0u, downloads.size());
+  ASSERT_TRUE(origin_one.ShutdownAndWaitUntilComplete());
+  ASSERT_TRUE(origin_two.ShutdownAndWaitUntilComplete());
+}
+
+// Tests that if a renderer initiated download triggers cross origin in the
+// redirect chain, the visible URL of the current tab shouldn't change.
+IN_PROC_BROWSER_TEST_F(DownloadContentTest,
+                       DownloadAttributeSameOriginRedirectNavigationTimeOut) {
+  net::EmbeddedTestServer origin_one;
+  net::EmbeddedTestServer origin_two;
+  ASSERT_TRUE(origin_one.InitializeAndListen());
+  ASSERT_TRUE(origin_two.InitializeAndListen());
 
+  // The download-attribute.html page contains an anchor element whose href is
+  // set to the value of the query parameter (specified as |target| in the URL
+  // below). The suggested filename for the anchor is 'suggested-filename'. When
+  // the page is loaded, a script simulates a click on the anchor, triggering a
+  // download of the target URL.
+  //
+  // We construct two test servers; origin_one and origin_two. Once started, the
+  // server URLs will differ by the port number. Therefore they will be in
+  // different origins.
+  GURL download_url = origin_one.GetURL("/ping");
+  GURL referrer_url = origin_one.GetURL(
+      std::string("/download-attribute.html?target=") + download_url.spec());
+  origin_one.ServeFilesFromDirectory(GetTestFilePath("download", ""));
+
+  // <origin_one>/download-attribute.html initiates a download of
+  // <origin_one>/ping, which redirects to <origin_two>/download. The latter
+  // will time out.
+  origin_one.RegisterRequestHandler(
+      CreateRedirectHandler("/ping", origin_two.GetURL("/download")));
+
+  origin_one.StartAcceptingConnections();
+
+  NavigationStartObserver obs(shell()->web_contents());
+  NavigationController::LoadURLParams params(referrer_url);
+  params.transition_type = ui::PageTransitionFromInt(
+      ui::PAGE_TRANSITION_TYPED | ui::PAGE_TRANSITION_FROM_ADDRESS_BAR);
+  shell()->web_contents()->GetController().LoadURLWithParams(params);
+  shell()->web_contents()->Focus();
+
+  // Waiting for 2 navigation to happen, one for the original request, one for
+  // the redirect.
+  obs.WaitForFinished(2);
+  EXPECT_EQ(referrer_url, shell()->web_contents()->GetVisibleURL());
   ASSERT_TRUE(origin_one.ShutdownAndWaitUntilComplete());
+  origin_two.StartAcceptingConnections();
   ASSERT_TRUE(origin_two.ShutdownAndWaitUntilComplete());
 }
 
diff --git a/src/3rdparty/chromium/content/browser/download/download_manager_impl.cc b/src/3rdparty/chromium/content/browser/download/download_manager_impl.cc
index 1e4719f65d7..045cfa8d528 100644
--- a/src/3rdparty/chromium/content/browser/download/download_manager_impl.cc
+++ b/src/3rdparty/chromium/content/browser/download/download_manager_impl.cc
@@ -497,6 +497,7 @@ bool DownloadManagerImpl::InterceptDownload(
       params.frame_tree_node_id =
           RenderFrameHost::GetFrameTreeNodeIdForRoutingId(
               info.render_process_id, info.render_frame_id);
+      params.is_renderer_initiated = info.is_content_initiated;
       web_contents->GetController().LoadURLWithParams(params);
     }
     if (info.request_handle)
-- 
2.23.0

