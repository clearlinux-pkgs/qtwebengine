From bf4fb03c7c4673e31e0bf97386b855ec31d914b7 Mon Sep 17 00:00:00 2001
From: Allan Jensen <allan.jensen@qt.io>
Date: Mon, 28 Oct 2019 14:33:43 +0100
Subject: [PATCH] Fix building with VS2019
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Comparitor functors needs to be const.

Fixes: QTBUG-78733
Change-Id: If6274d521e4648d8ce84b55540403a3772bf8a59
Reviewed-by: Michael Br√ºning <michael.bruning@qt.io>
---
 .../third_party/sfntly/src/cpp/src/sfntly/table/header.cc   | 4 ++--
 .../third_party/sfntly/src/cpp/src/sfntly/table/header.h    | 6 +++---
 chromium/ui/gfx/image/image_generic.cc                      | 2 +-
 chromium/v8/src/compiler/register-allocator.h               | 2 +-
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/3rdparty/chromium/third_party/sfntly/src/cpp/src/sfntly/table/header.cc b/src/3rdparty/chromium/third_party/sfntly/src/cpp/src/sfntly/table/header.cc
index 672ace5749d..eb8fd756bd1 100644
--- a/src/3rdparty/chromium/third_party/sfntly/src/cpp/src/sfntly/table/header.cc
+++ b/src/3rdparty/chromium/third_party/sfntly/src/cpp/src/sfntly/table/header.cc
@@ -54,12 +54,12 @@ Header::Header(int32_t tag, int64_t checksum, int32_t offset, int32_t length)
 Header::~Header() {}
 
 bool HeaderComparatorByOffset::operator() (const HeaderPtr lhs,
-                                           const HeaderPtr rhs) {
+                                           const HeaderPtr rhs) const {
   return lhs->offset_ > rhs->offset_;
 }
 
 bool HeaderComparatorByTag::operator() (const HeaderPtr lhs,
-                                        const HeaderPtr rhs) {
+                                        const HeaderPtr rhs) const {
   return lhs->tag_ > rhs->tag_;
 }
 
diff --git a/src/3rdparty/chromium/third_party/sfntly/src/cpp/src/sfntly/table/header.h b/src/3rdparty/chromium/third_party/sfntly/src/cpp/src/sfntly/table/header.h
index 33410bfa4a3..1a4cba1f9dc 100644
--- a/src/3rdparty/chromium/third_party/sfntly/src/cpp/src/sfntly/table/header.h
+++ b/src/3rdparty/chromium/third_party/sfntly/src/cpp/src/sfntly/table/header.h
@@ -89,21 +89,21 @@ class HeaderComparator {
  public:
   virtual ~HeaderComparator() {}
   virtual bool operator()(const HeaderPtr h1,
-                          const HeaderPtr h2) = 0;
+                          const HeaderPtr h2) const = 0;
 };
 
 class HeaderComparatorByOffset : public HeaderComparator {
  public:
   virtual ~HeaderComparatorByOffset() {}
   virtual bool operator()(const HeaderPtr h1,
-                          const HeaderPtr h2);
+                          const HeaderPtr h2) const;
 };
 
 class HeaderComparatorByTag : public HeaderComparator {
  public:
   virtual ~HeaderComparatorByTag() {}
   virtual bool operator()(const HeaderPtr h1,
-                          const HeaderPtr h2);
+                          const HeaderPtr h2) const;
 };
 
 typedef std::set<HeaderPtr, HeaderComparatorByOffset> HeaderOffsetSortedSet;
diff --git a/src/3rdparty/chromium/ui/gfx/image/image_generic.cc b/src/3rdparty/chromium/ui/gfx/image/image_generic.cc
index 3f424915dc9..acb7d622f1b 100644
--- a/src/3rdparty/chromium/ui/gfx/image/image_generic.cc
+++ b/src/3rdparty/chromium/ui/gfx/image/image_generic.cc
@@ -76,7 +76,7 @@ class PNGImageSource : public ImageSkiaSource {
 
  private:
   struct Compare {
-    bool operator()(const ImageSkiaRep& rep1, const ImageSkiaRep& rep2) {
+    bool operator()(const ImageSkiaRep& rep1, const ImageSkiaRep& rep2) const {
       return rep1.scale() < rep2.scale();
     }
   };
diff --git a/src/3rdparty/chromium/v8/src/compiler/register-allocator.h b/src/3rdparty/chromium/v8/src/compiler/register-allocator.h
index b5286e8e954..ee38246f119 100644
--- a/src/3rdparty/chromium/v8/src/compiler/register-allocator.h
+++ b/src/3rdparty/chromium/v8/src/compiler/register-allocator.h
@@ -1041,7 +1041,7 @@ class LinearScanAllocator final : public RegisterAllocator {
 
  private:
   struct LiveRangeOrdering {
-    bool operator()(LiveRange* a, LiveRange* b) {
+    bool operator()(LiveRange* a, LiveRange* b) const {
       return a->ShouldBeAllocatedBefore(b);
     }
   };
-- 
2.24.0

