From 3d89c9906557b3af346fbbc77389f344d81be2d9 Mon Sep 17 00:00:00 2001
From: Allan Sandfeld Jensen <allan.jensen@qt.io>
Date: Mon, 14 Oct 2019 13:31:24 +0200
Subject: [PATCH] [Backport] CVE-2019-13693

IndexedDB: Unregister cursors from transactions more consistently.

IndexedDBCursor now calls IndexedDBTransaction::UnregisterOpenCursor()
in Close(), which is called by the destructor.

The previous setup missed an edge case where calling
IndexedDBCursor::Close() directly would not unregister the cursor. This
behavior was relied upon in IndexedDBTransaction::CloseOpenCursors(),
but was not intended at other callsites.

(cherry picked from commit 23303e6f178ca2993bfde7114e6bdf48dd0eff9d)

Bug: 1005753
Change-Id: I91944138d05faa2d91ecc03b1040ec16ca1a7e5f
Reviewed-by: Joshua Bell <jsbell@chromium.org>
Commit-Queue: Victor Costan <pwnall@chromium.org>
Cr-Original-Commit-Position: refs/heads/master@{#699937}
Reviewed-by: Victor Costan <pwnall@chromium.org>
Cr-Commit-Position: refs/branch-heads/3865@{#872}
Cr-Branched-From: 0cdcc6158160790658d1f033d3db873603250124-refs/heads/master@{#681094}
Reviewed-by: Michal Klocek <michal.klocek@qt.io>
---
 chromium/content/browser/indexed_db/indexed_db_cursor.cc  | 4 ++--
 .../content/browser/indexed_db/indexed_db_transaction.cc  | 8 ++++++--
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/3rdparty/chromium/content/browser/indexed_db/indexed_db_cursor.cc b/src/3rdparty/chromium/content/browser/indexed_db/indexed_db_cursor.cc
index bd12dd62086..4d892ea6eb4 100644
--- a/src/3rdparty/chromium/content/browser/indexed_db/indexed_db_cursor.cc
+++ b/src/3rdparty/chromium/content/browser/indexed_db/indexed_db_cursor.cc
@@ -70,8 +70,6 @@ IndexedDBCursor::IndexedDBCursor(
 }
 
 IndexedDBCursor::~IndexedDBCursor() {
-  if (transaction_)
-    transaction_->UnregisterOpenCursor(this);
   // Call to make sure we complete our lifetime trace.
   Close();
 }
@@ -277,6 +275,8 @@ void IndexedDBCursor::Close() {
   closed_ = true;
   cursor_.reset();
   saved_cursor_.reset();
+  if (transaction_)
+    transaction_->UnregisterOpenCursor(this);
   transaction_ = nullptr;
 }
 
diff --git a/src/3rdparty/chromium/content/browser/indexed_db/indexed_db_transaction.cc b/src/3rdparty/chromium/content/browser/indexed_db/indexed_db_transaction.cc
index 78ac2ba3600..09c9be2d242 100644
--- a/src/3rdparty/chromium/content/browser/indexed_db/indexed_db_transaction.cc
+++ b/src/3rdparty/chromium/content/browser/indexed_db/indexed_db_transaction.cc
@@ -545,9 +545,13 @@ void IndexedDBTransaction::Timeout() {
 
 void IndexedDBTransaction::CloseOpenCursors() {
   IDB_TRACE1("IndexedDBTransaction::CloseOpenCursors", "txn.id", id());
-  for (auto* cursor : open_cursors_)
-    cursor->Close();
+
+  // IndexedDBCursor::Close() indirectly mutates |open_cursors_|, when it calls
+  // IndexedDBTransaction::UnregisterOpenCursor().
+  std::set<IndexedDBCursor*> open_cursors = std::move(open_cursors_);
   open_cursors_.clear();
+  for (auto* cursor : open_cursors)
+    cursor->Close();
 }
 
 void IndexedDBTransaction::AddPendingObserver(
-- 
2.23.0

