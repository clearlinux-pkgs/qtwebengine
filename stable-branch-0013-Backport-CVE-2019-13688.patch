From d4780d1a68bf370514fb5fe6f8bf01104f764e38 Mon Sep 17 00:00:00 2001
From: Allan Sandfeld Jensen <allan.jensen@qt.io>
Date: Mon, 14 Oct 2019 13:22:53 +0200
Subject: [PATCH] [Backport] CVE-2019-13688
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

[Video Capture Manager] Delete all occurrences of device start requests queued.

The vulnerability indicated in crbug.com/995964 suggests that the core
issue relates to the assumption that device_start_request_queue_ can
only contain one occurrence of a controller while this might not be the
case.

This change makes sure that all occurrence of a controller are removed
from the list, instead of removing only the first found.

BUG=995964

(cherry picked from commit f33b0b8907693ef8401f631ab4c3fe7424c84aae)

Change-Id: Ice2a1da37d13339128d3d52d25daa252c5d61155
Reviewed-by: Guido Urdaneta <guidou@chromium.org>
Commit-Queue: Armando Miraglia <armax@chromium.org>
Cr-Original-Commit-Position: refs/heads/master@{#694255}
Reviewed-by: Armando Miraglia <armax@chromium.org>
Cr-Commit-Position: refs/branch-heads/3865@{#802}
Cr-Branched-From: 0cdcc6158160790658d1f033d3db873603250124-refs/heads/master@{#681094}
Reviewed-by: JÃ¼ri Valdmann <juri.valdmann@qt.io>
---
 .../media/video_capture_manager.cc             | 18 ++++++++----------
 1 file changed, 8 insertions(+), 10 deletions(-)

diff --git a/src/3rdparty/chromium/content/browser/renderer_host/media/video_capture_manager.cc b/src/3rdparty/chromium/content/browser/renderer_host/media/video_capture_manager.cc
index f7ebd9b9c19..bed68afb7dd 100644
--- a/src/3rdparty/chromium/content/browser/renderer_host/media/video_capture_manager.cc
+++ b/src/3rdparty/chromium/content/browser/renderer_host/media/video_capture_manager.cc
@@ -212,16 +212,14 @@ void VideoCaptureManager::DoStopDevice(VideoCaptureController* controller) {
 
   // If start request has not yet started processing, i.e. if it is not at the
   // beginning of the queue, remove it from the queue.
-  auto request_iter = device_start_request_queue_.begin();
-  if (request_iter != device_start_request_queue_.end()) {
-    request_iter =
-        std::find_if(++request_iter, device_start_request_queue_.end(),
-                     [controller](const CaptureDeviceStartRequest& request) {
-                       return request.controller() == controller;
-                     });
-    if (request_iter != device_start_request_queue_.end()) {
-      device_start_request_queue_.erase(request_iter);
-      return;
+  if (!device_start_request_queue_.empty()) {
+    auto second_request = std::next(device_start_request_queue_.begin());
+
+    for (auto it = second_request; it != device_start_request_queue_.end();) {
+      if (it->controller() == controller)
+        it = device_start_request_queue_.erase(it);
+      else
+        ++it;
     }
   }
 
-- 
2.23.0

