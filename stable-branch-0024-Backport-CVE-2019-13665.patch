From 96cdfdfc635b9e724d68b9f37e22504ca0d0466b Mon Sep 17 00:00:00 2001
From: Allan Sandfeld Jensen <allan.jensen@qt.io>
Date: Tue, 15 Oct 2019 10:48:34 +0200
Subject: [PATCH] [Backport] CVE-2019-13665
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fix multiple download protection for <a download> x-origin redirect

The bug: multiple downloads protection is bypassed when there are multiple
<a download> download attempts and they end up triggering a x-origin redirect
to another download.

The cause: Each x-origin redirect following the <a download> is being treated as
a navigation. (See DownloadManagerImpl::InterceptDownload() (NetworkService
enabled), DownloadResourceHandler::OnRequestRedirected() (NetworkService
disabled)). The navigation will hit
DownloadRequestLimiter::TabDownloadState::DidStartNavigation that resets some
state of the limiter, and future downloads won't be prevented.

The solution: plumb |from_download_cross_origin_redirect| to NavigationRequest,
and skip resetting the limiter state when the flag is true.

Bug: 959640
Change-Id: I7d8aca09670be5258e149e34e3e6f2f3107442ff
Reviewed-by: Jochen Eisinger <jochen@chromium.org>
Reviewed-by: Min Qin <qinmin@chromium.org>
Commit-Queue: Yao Xiao <yaoxia@chromium.org>
Cr-Commit-Position: refs/heads/master@{#665973}
Reviewed-by: Michael Br√ºning <michael.bruning@qt.io>
---
 .../browser/download/download_manager_impl.cc       |  1 +
 .../browser/download/download_resource_handler.cc   |  4 ++++
 .../frame_host/navigation_controller_impl.cc        |  5 ++++-
 .../browser/frame_host/navigation_handle_impl.cc    |  5 +++++
 .../browser/frame_host/navigation_handle_impl.h     |  1 +
 .../content/browser/frame_host/navigation_request.h | 13 +++++++++++++
 .../content/public/browser/navigation_controller.cc |  3 ++-
 .../content/public/browser/navigation_controller.h  |  4 ++++
 chromium/content/public/browser/navigation_handle.h |  4 ++++
 9 files changed, 38 insertions(+), 2 deletions(-)

diff --git a/src/3rdparty/chromium/content/browser/download/download_manager_impl.cc b/src/3rdparty/chromium/content/browser/download/download_manager_impl.cc
index 045cfa8d528..9764d079273 100644
--- a/src/3rdparty/chromium/content/browser/download/download_manager_impl.cc
+++ b/src/3rdparty/chromium/content/browser/download/download_manager_impl.cc
@@ -497,6 +497,7 @@ bool DownloadManagerImpl::InterceptDownload(
       params.frame_tree_node_id =
           RenderFrameHost::GetFrameTreeNodeIdForRoutingId(
               info.render_process_id, info.render_frame_id);
+      params.from_download_cross_origin_redirect = true;
       params.is_renderer_initiated = info.is_content_initiated;
       web_contents->GetController().LoadURLWithParams(params);
     }
diff --git a/src/3rdparty/chromium/content/browser/download/download_resource_handler.cc b/src/3rdparty/chromium/content/browser/download/download_resource_handler.cc
index cd846576c5e..bf22d574dad 100644
--- a/src/3rdparty/chromium/content/browser/download/download_resource_handler.cc
+++ b/src/3rdparty/chromium/content/browser/download/download_resource_handler.cc
@@ -123,6 +123,7 @@ void NavigateOnUIThread(const GURL& url,
                         const std::vector<GURL> url_chain,
                         const Referrer& referrer,
                         bool has_user_gesture,
+                        bool from_download_cross_origin_redirect,
                         const ResourceRequestInfo::WebContentsGetter& wc_getter,
                         int frame_tree_node_id) {
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
@@ -134,6 +135,8 @@ void NavigateOnUIThread(const GURL& url,
     params.referrer = referrer;
     params.redirect_chain = url_chain;
     params.frame_tree_node_id = frame_tree_node_id;
+    params.from_download_cross_origin_redirect =
+        from_download_cross_origin_redirect;
     web_contents->GetController().LoadURLWithParams(params);
   }
 }
@@ -209,6 +212,7 @@ void DownloadResourceHandler::OnRequestRedirected(
                      Referrer::NetReferrerPolicyToBlinkReferrerPolicy(
                          redirect_info.new_referrer_policy)),
             GetRequestInfo()->HasUserGesture(),
+            true /* from_download_cross_origin_redirect */,
             GetRequestInfo()->GetWebContentsGetterForRequest(),
             GetRequestInfo()->frame_tree_node_id()));
     controller->Cancel();
diff --git a/src/3rdparty/chromium/content/browser/frame_host/navigation_controller_impl.cc b/src/3rdparty/chromium/content/browser/frame_host/navigation_controller_impl.cc
index c4df800e558..7597171fb14 100644
--- a/src/3rdparty/chromium/content/browser/frame_host/navigation_controller_impl.cc
+++ b/src/3rdparty/chromium/content/browser/frame_host/navigation_controller_impl.cc
@@ -2817,10 +2817,13 @@ NavigationControllerImpl::CreateNavigationRequestFromLoadParams(
   // extra_headers in params are \n separated; NavigationRequests want \r\n.
   std::string extra_headers_crlf;
   base::ReplaceChars(params.extra_headers, "\n", "\r\n", &extra_headers_crlf);
-  return NavigationRequest::CreateBrowserInitiated(
+  auto navigation_request = NavigationRequest::CreateBrowserInitiated(
       node, common_params, request_params, !params.is_renderer_initiated,
       extra_headers_crlf, *frame_entry, entry, request_body,
       params.navigation_ui_data ? params.navigation_ui_data->Clone() : nullptr);
+  navigation_request->set_from_download_cross_origin_redirect(
+      params.from_download_cross_origin_redirect);
+  return navigation_request;
 }
 
 std::unique_ptr<NavigationRequest>
diff --git a/src/3rdparty/chromium/content/browser/frame_host/navigation_handle_impl.cc b/src/3rdparty/chromium/content/browser/frame_host/navigation_handle_impl.cc
index b8647210b09..9c7a417ab70 100644
--- a/src/3rdparty/chromium/content/browser/frame_host/navigation_handle_impl.cc
+++ b/src/3rdparty/chromium/content/browser/frame_host/navigation_handle_impl.cc
@@ -605,6 +605,11 @@ bool NavigationHandleImpl::IsFormSubmission() {
   return is_form_submission_;
 }
 
+bool NavigationHandleImpl::FromDownloadCrossOriginRedirect() {
+  NavigationRequest* request = frame_tree_node_->navigation_request();
+  return request && request->from_download_cross_origin_redirect();
+}
+
 void NavigationHandleImpl::InitServiceWorkerHandle(
     ServiceWorkerContextWrapper* service_worker_context) {
   service_worker_handle_.reset(
diff --git a/src/3rdparty/chromium/content/browser/frame_host/navigation_handle_impl.h b/src/3rdparty/chromium/content/browser/frame_host/navigation_handle_impl.h
index fe477a944b9..7c82effd264 100644
--- a/src/3rdparty/chromium/content/browser/frame_host/navigation_handle_impl.h
+++ b/src/3rdparty/chromium/content/browser/frame_host/navigation_handle_impl.h
@@ -159,6 +159,7 @@ class CONTENT_EXPORT NavigationHandleImpl : public NavigationHandle {
   const GlobalRequestID& GetGlobalRequestID() override;
   bool IsDownload() override;
   bool IsFormSubmission() override;
+  bool FromDownloadCrossOriginRedirect() override;
 
   const std::string& origin_policy() const { return origin_policy_; }
   void set_origin_policy(const std::string& origin_policy) {
diff --git a/src/3rdparty/chromium/content/browser/frame_host/navigation_request.h b/src/3rdparty/chromium/content/browser/frame_host/navigation_request.h
index 51a636ce7f5..f7eefd81520 100644
--- a/src/3rdparty/chromium/content/browser/frame_host/navigation_request.h
+++ b/src/3rdparty/chromium/content/browser/frame_host/navigation_request.h
@@ -184,6 +184,15 @@ class CONTENT_EXPORT NavigationRequest : public NavigationURLLoaderDelegate {
     on_start_checks_complete_closure_ = closure;
   }
 
+  bool from_download_cross_origin_redirect() const {
+    return from_download_cross_origin_redirect_;
+  }
+
+  void set_from_download_cross_origin_redirect(
+      bool from_download_cross_origin_redirect) {
+    from_download_cross_origin_redirect_ = from_download_cross_origin_redirect;
+  }
+
   int nav_entry_id() const { return nav_entry_id_; }
 
   // For automation driver-initiated navigations over the devtools protocol,
@@ -451,6 +460,10 @@ class CONTENT_EXPORT NavigationRequest : public NavigationURLLoaderDelegate {
   // Only valid when PerNavigationMojoInterface is enabled.
   mojom::NavigationClientAssociatedPtr commit_navigation_client_;
 
+  // Whether this navigation was triggered by a x-origin redirect following a
+  // prior (most likely <a download>) download attempt.
+  bool from_download_cross_origin_redirect_ = false;
+
   // If set, any redirects to HTTP for this navigation will be upgraded to
   // HTTPS. This is used only on subframe navigations, when
   // upgrade-insecure-requests is set as a CSP policy.
diff --git a/src/3rdparty/chromium/content/public/browser/navigation_controller.cc b/src/3rdparty/chromium/content/public/browser/navigation_controller.cc
index 31668bd14ef..91eefde7aba 100644
--- a/src/3rdparty/chromium/content/public/browser/navigation_controller.cc
+++ b/src/3rdparty/chromium/content/public/browser/navigation_controller.cc
@@ -23,7 +23,8 @@ NavigationController::LoadURLParams::LoadURLParams(const GURL& url)
       has_user_gesture(false),
       should_clear_history_list(false),
       started_from_context_menu(false),
-      navigation_ui_data(nullptr) {
+      navigation_ui_data(nullptr),
+      from_download_cross_origin_redirect(false) {
 }
 
 NavigationController::LoadURLParams::~LoadURLParams() {
diff --git a/src/3rdparty/chromium/content/public/browser/navigation_controller.h b/src/3rdparty/chromium/content/public/browser/navigation_controller.h
index e99c823ac40..42570e72362 100644
--- a/src/3rdparty/chromium/content/public/browser/navigation_controller.h
+++ b/src/3rdparty/chromium/content/public/browser/navigation_controller.h
@@ -197,6 +197,10 @@ class NavigationController {
     // ContentBrowserClient::GetNavigationUIData.
     std::unique_ptr<NavigationUIData> navigation_ui_data;
 
+    // Whether this navigation was triggered by a x-origin redirect following a
+    // prior (most likely <a download>) download attempt.
+    bool from_download_cross_origin_redirect;
+
     explicit LoadURLParams(const GURL& url);
     ~LoadURLParams();
     LoadURLParams(LoadURLParams &&) = default;
diff --git a/src/3rdparty/chromium/content/public/browser/navigation_handle.h b/src/3rdparty/chromium/content/public/browser/navigation_handle.h
index 2bace920726..981db05aa85 100644
--- a/src/3rdparty/chromium/content/public/browser/navigation_handle.h
+++ b/src/3rdparty/chromium/content/public/browser/navigation_handle.h
@@ -319,6 +319,10 @@ class CONTENT_EXPORT NavigationHandle {
   // deferring NavigationThrottle do the resuming.
   virtual void CallResumeForTesting() = 0;
 
+  // Whether this navigation was triggered by a x-origin redirect following a
+  // prior (most likely <a download>) download attempt.
+  virtual bool FromDownloadCrossOriginRedirect() = 0;
+
   // The NavigationData that the embedder returned from
   // ResourceDispatcherHostDelegate::GetNavigationData during commit. This will
   // be a clone of the NavigationData.
-- 
2.24.0

