From 5ab4355f5e9eac8eb1299903d68241c95447cca6 Mon Sep 17 00:00:00 2001
From: Allan Sandfeld Jensen <allan.jensen@qt.io>
Date: Mon, 14 Oct 2019 12:13:16 +0200
Subject: [PATCH] [Backport] CVE-2019-5876
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

[Media Session] Fix issues in media session

For more context, please see the bug. This CL
is two part:

1) Unconditionally remove the player from
    the media session
2) Do not add a pepper player if focus fails

BUG=997190

(cherry picked from commit e30383d507bb7f94a42a32c42d98ff2dd4811166)

Change-Id: I2f20d94762a2908c7531ce35cc2df110e5ba13aa
Commit-Queue: Becca Hughes <beccahughes@chromium.org>
Reviewed-by: Tommy Steimel <steimel@chromium.org>
Cr-Original-Commit-Position: refs/heads/master@{#690096}
Reviewed-by: Becca Hughes <beccahughes@chromium.org>
Cr-Commit-Position: refs/branch-heads/3865@{#600}
Cr-Branched-From:
0cdcc6158160790658d1f033d3db873603250124-refs/heads/master@{#681094}
Reviewed-by: Jüri Valdmann <juri.valdmann@qt.io>

chromium/content/browser/media/session/media_session_controller.cc
chromium/content/browser/media/session/media_session_impl_browsertest.cc

Change-Id: I7adca2d7c5316273b37a714e530007df4b08433c
Reviewed-by: Jüri Valdmann <juri.valdmann@qt.io>
---
 .../media/session/media_session_controller.cc      |  8 ++------
 .../media/session/media_session_controller.h       |  2 ++
 .../session/media_session_controller_unittest.cc   | 14 ++++++++++++++
 .../browser/media/session/media_session_impl.cc    |  3 ++-
 .../browser/media/session/media_session_impl.h     |  2 +-
 5 files changed, 21 insertions(+), 8 deletions(-)

diff --git a/src/3rdparty/chromium/content/browser/media/session/media_session_controller.cc b/src/3rdparty/chromium/content/browser/media/session/media_session_controller.cc
index 69df8daac0e..c47fe7f1b97 100644
--- a/src/3rdparty/chromium/content/browser/media/session/media_session_controller.cc
+++ b/src/3rdparty/chromium/content/browser/media/session/media_session_controller.cc
@@ -23,8 +23,6 @@ MediaSessionController::MediaSessionController(
 }
 
 MediaSessionController::~MediaSessionController() {
-  if (!has_session_)
-    return;
   media_session_->RemovePlayer(this, player_id_);
 }
 
@@ -56,10 +54,8 @@ bool MediaSessionController::Initialize(
   // Don't bother with a MediaSession for remote players or without audio.  If
   // we already have a session from a previous call, release it.
   if (!has_audio || is_remote) {
-    if (has_session_) {
-      has_session_ = false;
-      media_session_->RemovePlayer(this, player_id_);
-    }
+    has_session_ = false;
+    media_session_->RemovePlayer(this, player_id_);
     return true;
   }
 
diff --git a/src/3rdparty/chromium/content/browser/media/session/media_session_controller.h b/src/3rdparty/chromium/content/browser/media/session/media_session_controller.h
index 3a9ea7cfcc0..3eec4ab6c52 100644
--- a/src/3rdparty/chromium/content/browser/media/session/media_session_controller.h
+++ b/src/3rdparty/chromium/content/browser/media/session/media_session_controller.h
@@ -58,6 +58,8 @@ class CONTENT_EXPORT MediaSessionController
   int get_player_id_for_testing() const { return player_id_; }
 
  private:
+  friend class MediaSessionControllerTest;
+
   const WebContentsObserver::MediaPlayerId id_;
 
   // Non-owned pointer; |media_web_contents_observer_| is the owner of |this|.
diff --git a/src/3rdparty/chromium/content/browser/media/session/media_session_controller_unittest.cc b/src/3rdparty/chromium/content/browser/media/session/media_session_controller_unittest.cc
index 433d2de0937..8e17b92222b 100644
--- a/src/3rdparty/chromium/content/browser/media/session/media_session_controller_unittest.cc
+++ b/src/3rdparty/chromium/content/browser/media/session/media_session_controller_unittest.cc
@@ -64,6 +64,8 @@ class MediaSessionControllerTest : public RenderViewHostImplTestHarness {
                                        multiplier);
   }
 
+  void ResetHasSessionBit() { controller_->has_session_ = false; }
+
   template <typename T>
   bool ReceivedMessagePlayPause() {
     const IPC::Message* msg = test_sink().GetUniqueMessageMatching(T::ID);
@@ -254,4 +256,16 @@ TEST_F(MediaSessionControllerTest, Reinitialize) {
   EXPECT_EQ(current_player_id, controller_->get_player_id_for_testing());
 }
 
+TEST_F(MediaSessionControllerTest, RemovePlayerIfSessionReset) {
+  ASSERT_TRUE(controller_->Initialize(
+      true, false, media::MediaContentType::Persistent, nullptr));
+  EXPECT_TRUE(media_session()->IsActive());
+
+  ResetHasSessionBit();
+  EXPECT_TRUE(media_session()->IsActive());
+
+  controller_.reset();
+  EXPECT_FALSE(media_session()->IsActive());
+}
+
 }  // namespace content
diff --git a/src/3rdparty/chromium/content/browser/media/session/media_session_impl.cc b/src/3rdparty/chromium/content/browser/media/session/media_session_impl.cc
index a66c5d02e07..be81c82dada 100644
--- a/src/3rdparty/chromium/content/browser/media/session/media_session_impl.cc
+++ b/src/3rdparty/chromium/content/browser/media/session/media_session_impl.cc
@@ -632,7 +632,8 @@ bool MediaSessionImpl::AddPepperPlayer(MediaSessionPlayerObserver* observer,
                                        int player_id) {
   bool success =
       RequestSystemAudioFocus(AudioFocusManager::AudioFocusType::Gain);
-  DCHECK(success);
+  if (!success)
+    return false;
 
   pepper_players_.insert(PlayerIdentifier(observer, player_id));
 
diff --git a/src/3rdparty/chromium/content/browser/media/session/media_session_impl.h b/src/3rdparty/chromium/content/browser/media/session/media_session_impl.h
index 637acb6dfcf..18c4f633594 100644
--- a/src/3rdparty/chromium/content/browser/media/session/media_session_impl.h
+++ b/src/3rdparty/chromium/content/browser/media/session/media_session_impl.h
@@ -168,7 +168,7 @@ class MediaSessionImpl : public MediaSession,
   }
 
   // Returns whether the session has Pepper instances.
-  bool HasPepper() const;
+  CONTENT_EXPORT bool HasPepper() const;
 
   // WebContentsObserver implementation
   void WebContentsDestroyed() override;
-- 
2.24.0

